general:
  branches:
    only:
      - master

dependencies:
    pre:
        # Install a few packages which will be needed for building the cross compiler.
      - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y && sudo apt-get update 
      - sudo apt-get install gcc-6 g++-6
#      - sudo apt-get install g++-5.0
      - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 90
      - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 90
  # https://github.com/travis-ci-tester/travis-test-clang-cxx-11
      - sudo apt-get install libstdc++-4.8-dev
#install cmake
      - wget http://www.cmake.org/files/v3.9/cmake-3.9.0.tar.gz
      - openssl sha1 cmake-3.9.0.tar.gz
      - tar xf cmake-3.9.0.tar.gz
      - cd cmake-3.9.0 && ./bootstrap --prefix=~ && make && make install && cd ..
      - export PATH="~/bin:${PATH}"

#cppunittest
      - sudo apt-get install libcppunit-dev
      - sudo apt-get install -y build-essential
      - sudo apt-get install -y cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev
      - sudo apt-get install -y python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev
      - sudo apt-get -y update;
      - sudo apt-get -y install opencl-headers libtbb-dev
      - sudo apt-get -y install libjpeg-dev libjasper-dev libpng++-dev libtiff-dev libopenexr-dev libwebp-dev
      - bash script/install_opencv3.sh

#QT
#      - sudo add-apt-repository ppa:beineri/opt-qt59-trusty -y && sudo apt-get update
#      - sudo apt-get install qt59-meta-full qt59base qt59creator qt59quickcontrols qt59tools 
#Boost
#      - wget -O boost_1_62_0.tar.gz https://sourceforge.net/projects/boost/files/boost/1.62.0/boost_1_62_0.tar.gz/download
#      - tar xzvf boost_1_62_0.tar.gz
#      - cd boost_1_62_0/ && sudo apt-get update && sudo apt-get install build-essential g++ python-dev autotools-dev libicu-dev build-essential libbz2-dev libboost-all-dev && ./bootstrap.sh --prefix=/usr/ --with-libraries=date_time,filesystem,system,iostreams,regex,python,test && ./b2 && sudo ./b2 install && cd ../../

#freeimage
      - sudo apt-get install libfreeimage3 libfreeimage-dev
#eigen
      - sudo apt-get install libeigen3-dev
      - sudo apt-get install libsdl2-dev
#visage
      - sudo apt-get install zip
      - wget -O visageSDK-Linux.tar.gz https://drive.google.com/file/d/0B42K6KJGzYPMS2pEQzRCSC15NHc/view?usp=sharing
      - unzip visageSDK-Linux.zip
      - cd visage_linux && sudo cp -a include/. /usr/local/include && cp -a lib/. /usr/local/lib && cp -a bin/. /usr/local/bin

compile:
    override:
        # Place here whatever commands are necessary to build your project.
      - mkdir build && cd build && cmake .. && make -j6

test:
    override:
        - bash augmented-reality
        - echo "Nothing to do here"
